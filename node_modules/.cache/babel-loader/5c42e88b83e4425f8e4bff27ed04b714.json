{"ast":null,"code":"var _jsxFileName = \"/Users/michaelpierre-louis/Desktop/HW/employee_directory/src/component/Table/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EmployeeData from './EmployeeData.json';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const [data, setdata] = useState(EmployeeData);\n  const [nestedData, setnestedData] = useState(EmployeeData.name);\n  const [order, setorder] = useState('ASC');\n\n  const sorting = col => {\n    if (order === 'ASC') {\n      const sorted = [...data].sort((a, b) => a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1);\n      setdata(sorted);\n      setorder('DSC');\n    }\n\n    ;\n\n    if (order === 'DSC') {\n      const sorted = [...data].sort((a, b) => a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1);\n      setdata(sorted);\n      setorder('ASC');\n    }\n\n    ;\n  };\n\n  const nestedSorting = col => {\n    if (order === 'ASC') {\n      const sorted = [...nestedData].sort((a, b) => a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1);\n      setdata(sorted);\n      setorder('DSC');\n    }\n\n    ;\n\n    if (order === 'DSC') {\n      const sorted = [...nestedData].sort((a, b) => a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1);\n      setdata(sorted);\n      setorder('ASC');\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sorting('name').map('last'),\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sorting(\"email\"),\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sorting(\"cell\"),\n            children: \"Cell Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.name.last\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.name.first\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.cell\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, d.name.last, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"bKrpu4Dglfb+G/XY2/epCK+qjwc=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/michaelpierre-louis/Desktop/HW/employee_directory/src/component/Table/index.js"],"names":["React","useState","EmployeeData","Table","data","setdata","nestedData","setnestedData","name","order","setorder","sorting","col","sorted","sort","a","b","toLowerCase","nestedSorting","map","d","last","first","email","cell"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport EmployeeData from './EmployeeData.json';\nimport './index.css'\n\n \nfunction Table () {\n    const [data, setdata] = useState(EmployeeData);\n    const [nestedData, setnestedData] = useState(EmployeeData.name)\n    const [order, setorder] = useState('ASC')\n    const sorting =(col)=>{\n        if (order === 'ASC'){\n            const sorted = [...data].sort((a,b)=>\n            a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1);\n            setdata(sorted);\n            setorder('DSC')\n        };\n        if (order === 'DSC'){\n            const sorted = [...data].sort((a,b)=>\n            a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1);\n            setdata(sorted);\n            setorder('ASC')\n        };\n    }\n    const nestedSorting =(col)=>{\n        if (order === 'ASC'){\n            const sorted = [...nestedData].sort((a,b)=>\n            a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1);\n            setdata(sorted);\n            setorder('DSC')\n        };\n        if (order === 'DSC'){\n            const sorted = [...nestedData].sort((a,b)=>\n            a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1);\n            setdata(sorted);\n            setorder('ASC')\n        };\n    }\n         \n    return (\n        <div className= 'container'>\n            <table className= 'table table-bordered'>\n            <thead>\n                <tr>\n                    <th onClick={()=>sorting('name').map('last')}>Last Name</th>\n                    <th>First Name</th>\n                    <th onClick={()=>sorting(\"email\")}>Email</th>\n                    <th onClick={()=>sorting(\"cell\")}>Cell Phone</th>\n                </tr>\n            </thead>\n            <tbody>\n                {data.map((d)=> (\n                    <tr key={d.name.last}>\n                    <td>{d.name.last}</td>\n                    <td>{d.name.first}</td>\n                    <td>{d.email}</td>\n                    <td>{d.cell}</td>\n                </tr>\n\n                ))}\n                \n            </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}